{
	"name": "ProcessingDataFiles",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsSourceFile",
						"type": "DatasetReference"
					},
					"name": "source"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dsDeparment",
						"type": "DatasetReference"
					},
					"name": "SnkDepartment"
				},
				{
					"dataset": {
						"referenceName": "Employee",
						"type": "DatasetReference"
					},
					"name": "SnkEmployee"
				},
				{
					"dataset": {
						"referenceName": "DsCity",
						"type": "DatasetReference"
					},
					"name": "SnkCity"
				},
				{
					"dataset": {
						"referenceName": "dsSalary",
						"type": "DatasetReference"
					},
					"name": "sinkSalary"
				}
			],
			"transformations": [
				{
					"name": "EMPLOYEE"
				},
				{
					"name": "DEPARTMENT"
				},
				{
					"name": "SALARY"
				},
				{
					"name": "CITY"
				},
				{
					"name": "SelectEmployee"
				},
				{
					"name": "SelectDepartment"
				},
				{
					"name": "SelectCity"
				},
				{
					"name": "SelectSalary"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source",
				"source filter(Column_1 == 'EMPLOYEE') ~> EMPLOYEE",
				"source filter(Column_1 == 'DEPARTMENT') ~> DEPARTMENT",
				"source filter(Column_1 == 'SALARY') ~> SALARY",
				"source filter(Column_1 == 'CITY') ~> CITY",
				"EMPLOYEE select(mapColumn(",
				"          TBLENAME = Column_1,",
				"          ENAME = Column_2,",
				"          DEPTNO = Column_3,",
				"          JOB = Column_4,",
				"          EMPNO = Column_5,",
				"          HIREDATE = Column_6,",
				"          LOCNO = Column_7,",
				"          SALGRADE = Column_8",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectEmployee",
				"DEPARTMENT select(mapColumn(",
				"          DEPTNO = Column_2,",
				"          DEPTNAME = Column_3",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDepartment",
				"CITY select(mapColumn(",
				"          LOCNO = Column_2,",
				"          LOCATION = Column_3",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCity",
				"SALARY select(mapColumn(",
				"          SALGRADE = Column_2,",
				"          MINSALARY = Column_3,",
				"          MAXSALARY = Column_4",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSalary",
				"SelectDepartment sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Department.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          DEPTNO,",
				"          DEPTNAME",
				"     )) ~> SnkDepartment",
				"SelectEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Employee.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          TBLENAME,",
				"          ENAME,",
				"          DEPTNO,",
				"          JOB,",
				"          EMPNO,",
				"          HIREDATE,",
				"          LOCNO,",
				"          SALGRADE",
				"     )) ~> SnkEmployee",
				"SelectCity sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string",
				"     ),",
				"     partitionFileNames:['city.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          LOCNO,",
				"          LOCATION",
				"     ),",
				"     partitionBy('hash', 1)) ~> SnkCity",
				"SelectSalary sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Salary.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          SALGRADE,",
				"          MINSALARY,",
				"          MAXSALARY",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkSalary"
			]
		}
	}
}